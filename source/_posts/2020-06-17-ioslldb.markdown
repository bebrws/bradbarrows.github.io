---
layout: post
title: "Build Clang LLD and LLDB for Arm64 iOS"
date: 2020-06-17 18:04:05 -0700
comments: true
categories: 
---

# Getting started

The first thing you need to do is build llvm for your host architecture.

I use the CMake GUI for this. I just use the default settings and hit configure.

Then the important part is you set the LLVM_ENABLE_PROJECTS variable to contain clang. I usually use:

        clang;lldb;lldb

For my host build.

Then run generate and cd into the directory and run ninja clang; ninja lld; ninja lldb

## Building for iOS

Now here the comes the slightly more tricky part.

When building LLVM for iOS I get errors when using the clang provided with xCode related to libatomic or missing threads.

You need to use the LLVM Clang build you just made for the host. (Or I think you can get by with using the Clang 10 that homebrew gets you too).

Either way in the CMake GUI when creating a new build directory select configure options for cross compiling.

Then set the clang and clang++ binaries to the ones you just built.

This will sove any CMake errors you might be getting related to libatomic.

Also be sure to set the LLVM_ENABLE_PROJECTS as above before hitting Generate.

Then you should be good to go!
